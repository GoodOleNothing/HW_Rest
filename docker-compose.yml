version: '3.9'

services:
  web:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis_broker
    restart: always
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery_worker
    command: celery -A config worker -l info -P eventlet
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A config beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  nginx:
    build: ./nginx
    container_name: nginx_server
    ports:
      - "8000:80"
    depends_on:
      - web
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
